{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../services/bean.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction OrderFormComponent_p_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.message);\n  }\n}\n\nexport let OrderFormComponent = /*#__PURE__*/(() => {\n  class OrderFormComponent {\n    constructor(http, beanService) {\n      this.http = http;\n      this.beanService = beanService;\n      this.selectedBean = null;\n      this.quantity = 1;\n      this.message = null;\n      this.cost = 0; // For handling calculated cost\n      // Added customerName and address\n\n      this.customerName = '';\n      this.address = '';\n    }\n\n    ngOnInit() {\n      this.updateCost(); // Update cost if the selected bean changes\n    }\n\n    ngOnChanges() {\n      this.updateCost(); // Recalculate cost when the selected bean changes\n    } // Function to update cost whenever a new bean is selected\n\n\n    updateCost() {\n      if (this.selectedBean) {\n        this.cost = this.selectedBean.cost * this.quantity; // Calculate the total cost\n      }\n    }\n\n    placeOrder() {\n      if (!this.selectedBean) {\n        this.message = 'Please select a bean first.';\n        return;\n      }\n\n      if (this.quantity <= 0) {\n        this.message = 'Quantity must be at least 1.';\n        return;\n      }\n\n      if (!this.customerName || !this.address) {\n        this.message = 'Please provide your name and address.';\n        return;\n      } // Include customerName and address in the order object\n\n\n      const order = {\n        customerName: this.customerName,\n        address: this.address,\n        beanId: this.selectedBean.id,\n        quantity: this.quantity,\n        orderDate: new Date().toISOString()\n      };\n      this.beanService.placeOrder(order).subscribe({\n        next: () => {\n          this.message = 'Order placed successfully!';\n          this.quantity = 1;\n          this.customerName = '';\n          this.address = '';\n          this.updateCost(); // Reset cost calculation after order\n        },\n        error: err => {\n          console.error(err);\n          this.message = 'Failed to place order. Please try again.';\n        }\n      });\n    }\n\n  }\n\n  OrderFormComponent.ɵfac = function OrderFormComponent_Factory(t) {\n    return new (t || OrderFormComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.BeanService));\n  };\n\n  OrderFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OrderFormComponent,\n    selectors: [[\"app-order-form\"]],\n    inputs: {\n      selectedBean: \"selectedBean\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 28,\n    vars: 12,\n    consts: [[1, \"order-form\"], [\"type\", \"text\", \"name\", \"customerName\", \"placeholder\", \"Enter your name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"address\", \"placeholder\", \"Enter your address\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"number\", \"min\", \"1\", \"name\", \"quantity\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"message\", 4, \"ngIf\"], [3, \"click\"], [1, \"message\"]],\n    template: function OrderFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Order Bean\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\")(4, \"strong\");\n        i0.ɵɵtext(5, \"Price:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6);\n        i0.ɵɵpipe(7, \"currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"p\")(9, \"strong\");\n        i0.ɵɵtext(10, \"Name:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function OrderFormComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.customerName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"p\")(13, \"strong\");\n        i0.ɵɵtext(14, \"Address:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function OrderFormComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.address = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"p\")(17, \"strong\");\n        i0.ɵɵtext(18, \"Quantity:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function OrderFormComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.quantity = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"p\")(21, \"strong\");\n        i0.ɵɵtext(22, \"Total:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(23);\n        i0.ɵɵpipe(24, \"currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(25, OrderFormComponent_p_25_Template, 2, 1, \"p\", 4);\n        i0.ɵɵelementStart(26, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function OrderFormComponent_Template_button_click_26_listener() {\n          return ctx.placeOrder();\n        });\n        i0.ɵɵtext(27, \"Place Order\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(7, 6, ctx.selectedBean == null ? null : ctx.selectedBean.cost, \"GBP\"), \"\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.customerName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.address);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.quantity);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(24, 9, ((ctx.selectedBean == null ? null : ctx.selectedBean.cost) || 0) * ctx.quantity, \"GBP\"), \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.message);\n      }\n    },\n    directives: [i3.DefaultValueAccessor, i3.RequiredValidator, i3.NgControlStatus, i3.NgModel, i3.MinValidator, i3.NumberValueAccessor, i4.NgIf],\n    pipes: [i4.CurrencyPipe],\n    styles: [\".order-form[_ngcontent-%COMP%]{max-width:400px;margin:1rem auto;padding:1.5rem;background:#fff;border-radius:12px;box-shadow:0 2px 6px #0000001a}.order-form[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%]{margin-bottom:1rem;font-size:1.4rem;text-align:center}.order-form[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{margin:.5rem 0}.order-form[_ngcontent-%COMP%]   input[type=number][_ngcontent-%COMP%]{width:100%;padding:.5rem;margin:.25rem 0 1rem;border:1px solid #ccc;border-radius:6px;font-size:1rem}.order-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;padding:.75rem;background:#2b7a0b;color:#fff;font-size:1rem;font-weight:700;border:none;border-radius:8px;cursor:pointer;transition:background .2s ease}.order-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background:#256708}.order-form[_ngcontent-%COMP%]   .message[_ngcontent-%COMP%]{margin-top:1rem;text-align:center;font-weight:700}\"]\n  });\n  return OrderFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}