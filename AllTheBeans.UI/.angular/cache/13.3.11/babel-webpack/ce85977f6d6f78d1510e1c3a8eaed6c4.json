{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let BeanService = /*#__PURE__*/(() => {\n  class BeanService {\n    constructor(http) {\n      this.http = http;\n      this.api = environment.apiUrl;\n    }\n    getBeans(filters) {\n      let params = new HttpParams();\n      for (const [k, v] of Object.entries(filters ?? {})) {\n        if (v !== undefined && v !== null && v !== '') params = params.set(k, String(v));\n      }\n      return this.http.get(`${this.api}/beans`, {\n        params\n      });\n    }\n    getBeanOfTheDay() {\n      return this.http.get(`${this.api}/beans/bean-of-the-day`);\n    }\n    placeOrder(order) {\n      return this.http.post(`${this.api}/orders`, order);\n    }\n    // ---- added CRUD for orders (non-breaking) ----\n    getOrders() {\n      return this.http.get(`${this.api}/orders`);\n    }\n    getOrder(id) {\n      return this.http.get(`${this.api}/orders/${id}`);\n    }\n    updateOrder(order) {\n      return this.http.put(`${this.api}/orders/${order.id}`, order);\n    }\n    deleteOrder(id) {\n      return this.http.delete(`${this.api}/orders/${id}`);\n    }\n  }\n  BeanService.ɵfac = function BeanService_Factory(t) {\n    return new (t || BeanService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  BeanService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BeanService,\n    factory: BeanService.ɵfac,\n    providedIn: 'root'\n  });\n  return BeanService;\n})();","map":null,"metadata":{},"sourceType":"module"}